<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="180" passed="135" failed="45" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-26T14:56:32 IST" name="Default suite" finished-at="2019-08-26T14:56:34 IST" duration-ms="1702">
    <groups>
    </groups>
    <test started-at="2019-08-26T14:56:32 IST" name="Default test" finished-at="2019-08-26T14:56:34 IST" duration-ms="1702">
      <class name="com.atmecs.dataprovider.Testing">
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elements]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Locaters]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Elements]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Elements]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[OrangeHRM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' OrangeHRM']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [OrangeHRM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [OrangeHRM]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Executive Profile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Executive Profile']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Executive Profile]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Executive Profile]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Press Releases]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Press Releases']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Press Releases]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Press Releases]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[News Articles]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' News Articles']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [News Articles]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [News Articles]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Case Studies]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Case Studies']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Case Studies]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Case Studies]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sitemap]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Sitemap']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Sitemap]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Sitemap]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Blog']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Blog]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Blog]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Forum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Forum']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Forum]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Forum]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Road Map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Road Map']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Road Map]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Road Map]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Careers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Careers']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Careers]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Careers]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Market Place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Market Place']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Market Place]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Market Place]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Partners']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Partners]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Partners]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Privacy Policy']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Privacy Policy]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Privacy Policy]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Service Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Service Privacy Policy']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Service Privacy Policy]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Service Privacy Policy]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[General Public License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' General Public License']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [General Public License]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [General Public License]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Business Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Business Policy']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Business Policy]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Business Policy]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Commercial License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Commercial License']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Commercial License]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Commercial License]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[USA (HQ) +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' USA (HQ) +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [USA (HQ) +1-914-458-4254]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [USA (HQ) +1-914-458-4254]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Europe +44-020-8133-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Europe +44-020-8133-4254']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Europe +44-020-8133-4254]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Europe +44-020-8133-4254]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[APAC +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' APAC +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [APAC +1-914-458-4254]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [APAC +1-914-458-4254]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global Support +1-914-908-4886]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Global Support +1-914-908-4886']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Global Support +1-914-908-4886]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Global Support +1-914-908-4886]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Locations]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Locations']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Locations]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Locations]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[first  name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_FirstName"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [first  name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [first  name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[last name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_LastName"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [last name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [last name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Start typing for favourite url here]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_subdomain"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Start typing for favourite url here]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Start typing for favourite url here]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bussiness email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Email"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Bussiness email]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Bussiness email]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[job title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_JobTitle"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [job title]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [job title]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[no of employees]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_NoOfEmployees"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [no of employees]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [no of employees]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[company name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_CompanyName"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [company name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [company name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[industry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Industry"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [industry]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [industry]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[phone no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Contact"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [phone no]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [phone no]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[company]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Country"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [company]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [company]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[populate the dummy data for the instance]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_SetDummyData"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [populate the dummy data for the instance]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [populate the dummy data for the instance]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumbit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_action_request"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [sumbit]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [sumbit]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[privacy policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Privacy Policy']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [privacy policy]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [privacy policy]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[free 30 days trial]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='FREE 30 Day Trial']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [free 30 days trial]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [free 30 days trial]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[contact sales]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Contact Sales']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [contact sales]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [contact sales]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Blog']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Blog]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Blog]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Partners']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [partners]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [partners]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[success stories]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Success Stories']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [success stories]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [success stories]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Services']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [Services]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [Services]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[features]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Features']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [features]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [features]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[EN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='EN']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [EN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [EN]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod4(java.lang.Object, java.lang.Object)[pri:1, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod4" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='ES']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not found expected [anusha1] but found [ES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not found expected [anusha1] but found [ES]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.atmecs.dataprovider.Testing.testMethod4(Testing.java:62)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elements]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Locaters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OrangeHRM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' OrangeHRM']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Executive Profile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Executive Profile']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Press Releases]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Press Releases']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[News Articles]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' News Articles']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Case Studies]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Case Studies']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sitemap]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Sitemap']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Blog']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Forum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Forum']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Careers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Careers']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Road Map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Road Map']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Market Place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Market Place']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Partners']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Service Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Service Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[General Public License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' General Public License']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Business Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Business Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Commercial License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Commercial License']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[USA (HQ) +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' USA (HQ) +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Europe +44-020-8133-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Europe +44-020-8133-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[APAC +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' APAC +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global Support +1-914-908-4886]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Global Support +1-914-908-4886']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Locations]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Locations']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first  name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_FirstName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_LastName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Start typing for favourite url here]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_subdomain"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bussiness email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Email"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[job title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_JobTitle"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no of employees]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_NoOfEmployees"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[company name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_CompanyName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[industry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Industry"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[phone no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Contact"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[company]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Country"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[populate the dummy data for the instance]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_SetDummyData"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumbit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_action_request"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[privacy policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[free 30 days trial]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='FREE 30 Day Trial']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[contact sales]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Contact Sales']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Blog']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Partners']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[success stories]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Success Stories']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Services']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[features]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Features']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='EN']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod2(java.lang.Object, java.lang.Object)[pri:2, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:33 IST" name="testMethod2" data-provider="data-provider" finished-at="2019-08-26T14:56:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='ES']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elements]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Locaters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OrangeHRM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' OrangeHRM']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Executive Profile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Executive Profile']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Press Releases]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Press Releases']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[News Articles]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' News Articles']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Case Studies]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Case Studies']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sitemap]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Sitemap']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Blog']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Forum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Forum']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Road Map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Road Map']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Careers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Careers']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Market Place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Market Place']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Partners']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Service Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Service Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[General Public License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' General Public License']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Commercial License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Commercial License']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Business Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Business Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[USA (HQ) +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' USA (HQ) +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Europe +44-020-8133-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Europe +44-020-8133-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[APAC +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' APAC +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global Support +1-914-908-4886]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Global Support +1-914-908-4886']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Locations]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Locations']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_LastName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first  name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_FirstName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Start typing for favourite url here]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_subdomain"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bussiness email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Email"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[job title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_JobTitle"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no of employees]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_NoOfEmployees"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[company name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_CompanyName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[industry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Industry"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[phone no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Contact"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[company]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Country"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[populate the dummy data for the instance]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_SetDummyData"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumbit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_action_request"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[privacy policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[free 30 days trial]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='FREE 30 Day Trial']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[contact sales]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Contact Sales']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Blog']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[success stories]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Success Stories']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Partners']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Services']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[features]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Features']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='EN']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method signature="testMethod1(java.lang.Object, java.lang.Object)[pri:3, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod1" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='ES']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elements]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Locaters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OrangeHRM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' OrangeHRM']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Press Releases]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Press Releases']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Executive Profile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Executive Profile']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[News Articles]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' News Articles']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Case Studies]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Case Studies']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sitemap]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Sitemap']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Blog']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Road Map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Road Map']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Forum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Forum']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Careers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Careers']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Market Place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Market Place']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Partners']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Service Privacy Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Service Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[General Public License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' General Public License']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Business Policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Business Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Commercial License]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Commercial License']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[USA (HQ) +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' USA (HQ) +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Europe +44-020-8133-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Europe +44-020-8133-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[APAC +1-914-458-4254]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' APAC +1-914-458-4254']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global Support +1-914-908-4886]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Global Support +1-914-908-4886']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Locations]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[text()=' Locations']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first  name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_FirstName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_LastName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Start typing for favourite url here]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_subdomain"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bussiness email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Email"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[job title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_JobTitle"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no of employees]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_NoOfEmployees"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[industry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Industry"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[company name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_CompanyName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[phone no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Contact"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[company]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_Country"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[populate the dummy data for the instance]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_SetDummyData"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumbit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id="Form_submitForm_action_request"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[privacy policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Privacy Policy']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[free 30 days trial]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='FREE 30 Day Trial']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[contact sales]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Contact Sales']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Blog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Blog']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[partners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Partners']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[success stories]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Success Stories']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Services']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[features]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='Features']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='EN']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="BeforeTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="BeforeTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method is-config="true" signature="AfterTestmessage()[pri:0, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="AfterTestmessage" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestmessage -->
        <test-method signature="testMethod3(java.lang.Object, java.lang.Object)[pri:4, instance:com.atmecs.dataprovider.Testing@415b0b49]" started-at="2019-08-26T14:56:34 IST" name="testMethod3" data-provider="data-provider" finished-at="2019-08-26T14:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[//a[ text()='ES']]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
      </class> <!-- com.atmecs.dataprovider.Testing -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
